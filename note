
import streamlit as st

def show_sidebar():
    # Custom CSS for the sidebar styling
    st.markdown("""
        <style>
        .stExpander {
            border: 1px solid #4B4B4B !important;
            border-radius: 5px !important;
            margin-bottom: 10px !important;
        }
        .stExpander > div:first-child {
            background-color: #2E2E2E !important;
        }
        </style>
    """, unsafe_allow_html=True)

    with st.sidebar:
        st.title("AI For Impact")
        
        # Home section
        with st.expander("üè† HOME", expanded=False):
            if st.button("Home Page", key="home", use_container_width=True):
                st.session_state["page"] = "home"
        
        # Assignments section
        with st.expander("üìö ASSIGNMENTS", expanded=False):
            if st.button("Assignment 1", key="as1", use_container_width=True):
                st.session_state["page"] = "as1"
            if st.button("Assignment 2", key="as2", use_container_width=True):
                st.session_state["page"] = "as2"
            if st.button("Assignment 3", key="as3", use_container_width=True):
                st.session_state["page"] = "as3"
            if st.button("Assignment 4", key="as4", use_container_width=True):
                st.session_state["page"] = "as4"
        
        # Quizzes section
        with st.expander("üìù QUIZZES", expanded=False):
            if st.button("Quiz 1", key="quiz1", use_container_width=True):
                st.session_state["page"] = "quiz1"
            if st.button("Quiz 2", key="quiz2", use_container_width=True):
                st.session_state["page"] = "quiz2"
        
        # Help section
        with st.expander("‚ùì HELP", expanded=False):
            if st.button("Help Center", key="help", use_container_width=True):
                st.session_state["page"] = "help"
        
        # Logout section
        with st.expander("üö™ LOGOUT", expanded=False):
            if st.button("Logout", key="logout", use_container_width=True):
                st.session_state["page"] = "logout"

        # Return the current page
        return st.session_state.get("page", "home")



----------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------



Summary of All Options in This Updated admin.py
Execute SQL:

Run any valid SQL command.
See results for queries (e.g., SELECT).
View Schema:

List all tables and view each table‚Äôs schema (columns and types).
Create Table:

Define and create a new table by specifying its name and columns.
Drop Table:

Permanently delete a table from the database (with a confirmation step).
Insert Row:

Insert a new row into a selected table by filling in values for each column.
Edit Row:

Fetch and update rows in a table based on a provided WHERE clause.
Delete Row:

Remove rows from a table using a specified WHERE clause.
Alter Table:

Add Column:
Select a table and add a new column by specifying its name and data type.
Delete Column:
Select a table and choose an existing column to delete.
The process recreates the table without the chosen column (data for remaining columns is preserved).
Backup/Restore:

Create a backup of the database file locally.
Restore the database from an uploaded backup file.
Push Changes to GitHub:

After many operations, you can push your local database changes to GitHub.
